<?php
/**
 * Created by PhpStorm.
 * User: DodoT
 * Date: 6/20/2019
 * Time: 12:29 AM
 */

namespace App\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\Extension\Core\Type\SubmitType;
use Symfony\Component\Form\Extension\Core\Type\UrlType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\Validator\Constraints\Callback;
use Symfony\Component\Validator\Context\ExecutionContextInterface;

class UrlForm extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('urlField', UrlType::class, [
                'label' => 'Put your link',
            ])
            ->add('Submit', SubmitType::class);
    }

    public function configureOptions(OptionsResolver $resolver)
    {
        parent::configureOptions($resolver); // TODO: Change the autogenerated stub
        $resolver->setDefaults(array(
            'constraints' => array(
                new Callback(array($this, 'validate')),
            ),
            'error_mapping' => array(
                'textField' => 'textField',
            ),
        ));
    }

    /**
     * Validation callback for entire form.
     *
     * @param $values
     * @param ExecutionContextInterface $context
     */
    public function validate($values, ExecutionContextInterface $context)
    {
        if(empty($values['urlField']))
        {
            return;
        }

        $pattern='/^(https?:\/\/)/';

        if(filter_var($values['urlField'], FILTER_VALIDATE_URL)&&!empty(preg_match($pattern,$values['urlField'], $matches)))
        {
            $hostname=parse_url($values['urlField'], PHP_URL_HOST);

            if (gethostbyname($hostname) !== $hostname)
            {
                $headers=get_headers($values['urlField']);
                if(!strpos($headers[0], '404'))
                {
                    return;
                }
            }
        }

        $context->buildViolation("Invalid url!")
            ->addViolation();
    }
}